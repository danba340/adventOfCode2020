const map = [
  ".##.............##......#.....#",
  ".#.#................#..........",
  "...#..#.##..#.#......#.#.#.#..#",
  "..#......#........#..#..#.#.#..",
  ".......#....#..#..#.......#....",
  "..#..#..##.#...#........#.###..",
  "..#...#..#.....#.##....#.......",
  "....#..###.#......#.##..#...##.",
  "..#..........#.##.#...#........",
  "#...#............##....#..##...",
  ".......##....#.....##..#.#..#.#",
  "..#..#..#...#....#....#....#...",
  ".#...#.##........#####........#",
  "..#..#......#.....##...#.......",
  "....#......##....#.#....#.#..##",
  "#.#.##....##..#.........#.###..",
  "##..###..#..#.......###.......#",
  "...#.#......#.........#....#...",
  ".....#..........#.....##..#.#..",
  "....##......#.#..#....#.#......",
  "..#.....#..##.......##......#..",
  ".........##.##.#..##...........",
  "....#...#.....#....#.#.###....#",
  ".##.#..#...##..#.......#......#",
  "##..#..#..####..#.#..#...#.....",
  "..###..#..#..#.###..#....#.##..",
  "......#...###.#.#.....#........",
  ".....#...#.#...#.......#.....#.",
  "#........#..##...........#..#..",
  ".#.##.##...#.....#.#....#..#...",
  "..##.##....#.....#....#....##..",
  "#.........##...##..#.....#..#..",
  "........#.####....#...##.....#.",
  ".#.#...#..#..#.#......##.....#.",
  "..#..........##..#.#.#....#...#",
  "#.......#...#...#.....#.##.#...",
  "..#.....#..#.....####.#..#.#.##",
  "...#.#..#...#.....#...#.#.#.#.#",
  ".#..##....##.....#..#....###...",
  "....#......##.#.#.....#......#.",
  "..#.#...#......#.....##.......#",
  "..#...###...#..#.#...#..#.....#",
  "#..............#.....#....##..#",
  ".#...#.......#.............#...",
  "..###....#.##........#.#.......",
  "#.##.......#..#............###.",
  "#...#..##.#.#............######",
  "..##..#....#.#.###...#..##.##..",
  ".#...#.###.#....#...#....#...#.",
  "#...#.......#...........#...##.",
  "##.#......#####.............#..",
  "....#..#......##..#..........#.",
  "#.....#.....#.#.......#...#...#",
  "....#...#.#..##........#.#..##.",
  "..##.....##............#.#.###.",
  "#.........#........#..###......",
  "............#..................",
  ".#.###...####...#.#..#......#..",
  "...##.###.#....##.#..####..#.##",
  "..#####.#.##...#.#...##.##....#",
  "........##...#...#....##.....##",
  "#...........###...#.#...##.#...",
  "##......#...#.......###........",
  "..#..#.##.#..###....#..#.###.#.",
  "...#.#.#...#....#.##..#...#....",
  "........#.##...##.#.....##...##",
  ".#..........##..#..#..#.#...#..",
  "#.#...#.##.#....#.##..#........",
  ".#.#.#....##..##.####.....###..",
  "..#....##....#..#..#..##.......",
  "..##...#.......#...##.#....#...",
  "...####.#.#...........#.#...#..",
  "....####.....#.#.....#....##.##",
  "..#.....#.#.............##....#",
  "#.#....#####.##..####.#...#.#..",
  "#.#....#.##.#.#.##..#.#...#....",
  "......#.......#.......#.....#..",
  "..#.....#....###.###..#..#..#..",
  "#..#....##.###...##.....#......",
  "..#..#...#..#.##..........#....",
  "...#.#.#......#....#.##..#..##.",
  "....##.#....#..#...##....###...",
  "##.#.###.....#..#.#.#..#.....##",
  "##..#.#........#...#..#.#......",
  "....#.#.......##.#...........#.",
  ".......##...#...#...#.....#....",
  ".....#....#..#..###.#...#......",
  "............#.#..#......#.#....",
  "...##..#.##....##..##.#......#.",
  "#.#.#......#.#.....#.#.#..#.#.#",
  "...###..........#..#..#.##.....",
  "......#......#......###..##....",
  "#...##...#....#....#..#...#.#..",
  ".......#..#......##.......#....",
  "...#..#..#.....#.....#......##.",
  "..#....###..........##..#...#..",
  "..........#..#.#...#......#..#.",
  "#...#....#.##.........#.#.#...#",
  ".#.#.#...#.#...#.#..#..#....#.#",
  "#.##....#..#.........#.##.##..#",
  "..#.#..##.#....#.###.#...#....#",
  ".#.......#...#.#.........#....#",
  ".......#...#..........#.#..#...",
  "...#.....##..#....#...###...#.#",
  "#....##.##..........#.......#..",
  ".##..##......#...#....#.##....#",
  "....#.....##...##.#..#.........",
  "...#.#..##.#.#..#.......#....#.",
  ".#...#.#.#.#..#..#.##.......#..",
  "..#..##...#.#..#.......#.#####.",
  ".......#.#...........#....#.#..",
  ".#.###..........#...#..#...#...",
  "..#.#............##......##....",
  "...##..#...###...##....#.#.##..",
  "....#.##...#..#.#.#...........#",
  "....#..#....##.....#.##.#.....#",
  "..##......##.#.........#....#.#",
  "###...#...#..#.#...#...........",
  ".####.....#.....#.#....#..#....",
  ".#....#..#..#..#...##.....###.#",
  "#....##.#....#.##..#......##..#",
  ".........#..#.#.....#.#....##.#",
  ".....#.#...#....#.#...#....#..#",
  ".#...#.#.....#.#......#.#......",
  "#....##.......#.............#..",
  "#..#...#........##..#..#......#",
  "####..##.#..##..#.........####.",
  ".#.##..#.#..#.#.#.##...#..#.#.#",
  ".##.#..#............#......#...",
  "###....#.##....#..#...#........",
  ".....#..###..........#..#......",
  ".##..##.....#..##....#...#.....",
  "#...##...........#..#...###..#.",
  "#..##....#...#.##.##....#......",
  "...#...#..#.#.......##.......##",
  "....#.....#..#...#.........#.#.",
  ".#...##.#......#.#..#..#...##..",
  "...##...##.##...##...#..#......",
  "#..##.#..#..#............#...#.",
  "..#.....#.........#........#.#.",
  "#.#...#...#......#.#......#....",
  ".##.....##.#.#....#.##...##.#..",
  ".##..##.#.#....#.##............",
  ".#.##.....##.#...#...###....#..",
  ".#..............#.#....###.###.",
  "....#..#...#.#.#..........#.#.#",
  ".#.#..#.#.#...###..#...##......",
  ".#.#.....###......#..........#.",
  "........#.##...............#.#.",
  "...#.#.#......#..#..##........#",
  "..#.##......#.......#..#......#",
  "...#...#...#...#..#..#........#",
  "..#....#.....#....#..##........",
  ".....#..#...##....#......##....",
  "...##..##..#..........##....#.#",
  "..#....#..#...#.##..#.....##...",
  "###...#.#....#........#.......#",
  "......#...#..#....###.........#",
  "..###.#...#...#...#.#..###.#...",
  ".##.#.......#.#..#..#......#.#.",
  "...##...........#.#..#.#..#....",
  ".......#.....####.#.....#...#.#",
  "......##......##.#.#.#...#.#..#",
  "..###.#####..#....#.#...#..##..",
  ".....#..#......#........#......",
  "#..##....#.#.##....#....#......",
  ".#....#.##.####.##..#..#......#",
  "#...##...#.#...##.#.##.##...#..",
  "........#.#........#.#...#..#..",
  ".#....###..#......#.##.###..#..",
  ".#..#..#..#..#...#.#.........##",
  "....#...#..#..............#....",
  "........#...##.....#.......#...",
  "..#......#.#..#.#..#.#.#...###.",
  "....#...####....###....#......#",
  "#...#.#...................#.##.",
  "..#.#.###...#....##....##......",
  "#..##..#.........#....#....####",
  ".#....###...#.#...#......#...#.",
  "......#..#.#..#.##...#.#.#..#..",
  ".#...#.#.....#..##......#..#...",
  "##.#..##.....##.#.#.......##...",
  ".##.##.##..#...#.#.##.##.......",
  ".#.#......#.....#...#.#..#.....",
  "...#...........#..#.##..##..#..",
  ".....#...##......#........#.#..",
  "....#..............##.........#",
  "..####.#....##..##......##.#.#.",
  ".#.#..#...#..........#...###..#",
  "....#.#.##.....###.#..#.##.....",
  ".......##.#.#..#...#...##.#....",
  "...#.##.....#....#...#...#.....",
  "##.#.##..#..#.#.....#.#..#.....",
  "..#..##........#....###..#..#..",
  "..#.........##.....#......#...#",
  "...##..........##......#.#.#...",
  "#.....#..#..#......#......#....",
  ".##...#..##....#.......##..#.#.",
  ".#...##...##......####.##.#....",
  ".....#.........#.#.####......#.",
  "...#.....#.#.........##..#.....",
  "##.#.###.#..#.#..#............#",
  "...##..#.#....#....#..#........",
  "..#.###......#...#.#.....#...#.",
  "....##.##..#.....#...#.#.#....#",
  ".......#.#..#...........#.#....",
  ".#.#..##.#.......#.#..#.....###",
  "...#.#.....#.#..#.##..#...#.#..",
  "...#......##....#..............",
  "......#...#....................",
  "..#........#...##.##.#..#.#.#..",
  ".#.###.#.##..##..#....##....#..",
  ".....#..#.#...#.#..#..#.......#",
  "..........#.##.#..##..####.....",
  "............#.#......#.........",
  ".#....#..#......#.....##.......",
  ".....#........#.....##.#..#.#..",
  "#..#.##...#.#.....#...#.####...",
  "......#...#....#.##..##.#...#..",
  ".#.#.##......##....#.#....#.##.",
  "#.#.#....#.###....##....##.....",
  ".##..#...#.##......#..#..#...##",
  "...#....###....#...........#.#.",
  "#.#.##.##...##....#....##.#...#",
  ".#.#######.......#......#......",
  "#......#...#.#.#.###....#.##..#",
  "......##..#..##.........##.#.##",
  "....##...#.#....##.....#.....#.",
  "..#.#........##........#.#..##.",
  ".....#..#.##.....#.....#..#.#..",
  ".#..............#.......#......",
  ".............#..#..........#...",
  ".#..#.##....##.#..#...##.......",
  "...........#..#.......#.#....#.",
  ".#..#..........##...#.#.#...#..",
  "......#....#..###....#......#..",
  ".#...#...##..#..#..##..#..#.#..",
  "#.#.........#....#..........##.",
  "...##..#..##...#....##...##.##.",
  "..#....#.####.........#.....##.",
  ".....#.#...#.#...#.##.#...##..#",
  "#...#.....#..#.......#...#..#..",
  "..#.......#..##.#.....#....#...",
  ".#.....#..##.#.....#...#.#...#.",
  ".....#.##..........##....#...#.",
  "...#....#...#........##...#...#",
  "....##...#....#..........#.....",
  "...#....##..#..####..##.#...#.#",
  "#...###.###..#....##.#.........",
  ".#.......#......#.........#....",
  "..#..##..#.........##..........",
  "#......#.#.##...#...#####......",
  "......#.....####......#....#...",
  ".........#..#..#...#....#.#....",
  "....#........#...##....#.......",
  "...##.#...#..........#....#....",
  "........#.......#.##..#..#...#.",
  "....#..##...........#.....#..#.",
  "#....#...............#.#....#..",
  ".#........#....#.#...#.......#.",
  "#.......##..........#.......#..",
  "...#....#...##.#..#.......#....",
  "#..#.##...#.#...#...#...#....#.",
  "###...#...#....#....#....#...#.",
  "##......#.#.......#....#..#....",
  "......#......#....#.#.#..###..#",
  ".#.#.##.....#..#..........#....",
  "##...#.#.#..##....#.....#.#....",
  "#.##...#...#.#...####..#.......",
  ".....##..#.#.#....#..##..#.#...",
  "....###.#.........##.....#.....",
  "......##...........#........#.#",
  ".#.........##..................",
  ".........##...#.............#.#",
  "......##...#...#.........#..##.",
  "#..#.......#..##.......###.....",
  "....#.#.....#............##....",
  ".....#..#......#....#.....##...",
  "##......##...................#.",
  "#....#............#.#.###.##...",
  ".#.....#........#.....#...#....",
  "......##.......######......##..",
  ".#....##....#..###....#.......#",
  "..............##.#..#.......#.#",
  ".#..#..........#..#.##.........",
  "......##.#..#......#.#....##.#.",
  "#.....#.##...#.....#...#..#...#",
  ".#....#..##.....#.....#.#.#....",
  "..#......#.##..#.........#.#.#.",
  ".#..##...#...#.....#..#..#.#..#",
  "#.#.##.##.................#.#.#",
  ".#..#.#..##.#.......#.......##.",
  "#...#...#..##...#...##...#...#.",
  "....#......#..#...#.....##..#..",
  "..............##......#...#.#..",
  "..##..#.......#..#..###.#.#....",
  ".#..#..#...#.......#...#...##.#",
  ".#...#.......###..#.##.###.....",
  "##.#...#......#.....#..#.......",
  "##....##............#.....#..#.",
  ".....#...##......##.....#....##",
  "#...##..#....#..##....###.#...#",
  ".....#..#.#.....#.##..##....#..",
  ".#.....#.#........#...#.#......",
  "......#....#.#........#.#......",
  ".##..#...............###...##.#",
  ".......###.#.#......###.....#..",
  ".......#..##...#....#.##..#.##.",
  "..#.......##.......#.....#....#",
  ".#......#....#..##..#.#.#..##..",
  "###......#...#..#.............#",
  ".#....#..#.#......##...........",
  ".#....#.##.....#..#.......#..##",
  "....#...#...#..#.....#..##..#.#",
  "#.#.#.......##.#..#.#....#.....",
  "##.#.......#...#...#.#......##.",
  "#....#.#...........#######.....",
  "...#.#.##.#......##..###.......",
  "..#.#....#..#.................#",
  "........#..##..#.....#....#.##.",
  "...#.#..#..#..#..............##",
  ".##.......###.#......#....#..##",
  "..##.##.#......#....#..#...#..#",
];

const treesInRight3Down1 = (map) => {
  let x = 0;
  let y = 0;
  let trees = 0;
  let right = 3;
  let down = 1;
  for (const [index, row] of map.entries()) {
    // Out of bounds?
    if (y > map.length - 1) return trees;
    // Skip row?
    if (index !== y) continue;
    if (row[x % row.length] === "#") {
      trees++;
    }
    x += right;
    y += down;
  }
  return trees;
};

const treesInSlope = (mapm, right, down) => {
  let x = 0;
  let y = 0;
  let trees = 0;
  for (const [index, row] of map.entries()) {
    // Out of bounds?
    if (y > map.length - 1) return trees;
    // Skip row?
    if (index !== y) continue;
    if (row[x % row.length] === "#") {
      trees++;
    }
    x += right;
    y += down;
  }
  return trees;
};

const slopes = [
  {
    right: 1,
    down: 1,
  },
  {
    right: 3,
    down: 1,
  },
  {
    right: 5,
    down: 1,
  },
  {
    right: 7,
    down: 1,
  },
  {
    right: 1,
    down: 2,
  },
];

const counts = slopes.map((slope) => {
  return treesInSlope(map, slope.right, slope.down);
});

const multiplied = counts.reduce((acc, count) => {
  return acc * count;
}, 1);

console.log(multiplied);
